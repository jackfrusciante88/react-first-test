{"version":3,"sources":["components/Card.js","components/Cardlist.js","components/SearchBox.js","components/Scroll.js","containers/App.js","index.js"],"names":["Card","data","id","email","name","username","className","alt","src","Cardlist","robots","map","user","key","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","console","log","style","overflowY","height","children","App","onSearchChange","event","setState","searchfield","target","value","state","fetch","then","response","json","users","this","filteredRobots","filter","robot","toLowerCase","includes","length","Component","rootElement","document","getElementById","ReactDOM","render"],"mappings":"sOAkBeA,EAfA,SAAC,GAAY,IAAXC,EAAU,EAAVA,KACPC,EAA6BD,EAA7BC,GAAIC,EAAyBF,EAAzBE,MAAOC,EAAkBH,EAAlBG,KAAMC,EAAYJ,EAAZI,SACzB,OACA,kBAAC,WAAD,KACE,yBAAKC,UAAU,oDACb,yBAAKC,IAAI,SAASC,IAAG,+BAA0BN,EAA1B,cACrB,6BACE,4BAAKE,GACL,qCAAWC,GACX,2BAAIF,OCKGM,EAdE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACjB,OACI,kBAAC,WAAD,KAEIA,EAAOC,KAAI,SAAAC,GACT,OAAO,kBAAC,EAAD,CACPC,IAAKD,EAAKV,GACVD,KAAMW,SCKHE,EAdI,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,aACpB,OACE,yBAAKT,UAAU,iBACb,2BACEA,UAAY,mCACZJ,GAAG,YACHc,KAAK,SACLC,YAAY,gBACZC,SAAUH,MCKHI,EAZA,SAAAC,GAEb,OADAC,QAAQC,IAAIF,GAEV,yBAAKG,MAAO,CACRC,UAAW,SACXC,OAAS,UAEVL,EAAMM,WCwCEC,G,wDAzCb,aAAe,IAAD,8BACZ,gBAaFC,eAAiB,SAAAC,GACf,EAAKC,SAAS,CAAEC,YAAaF,EAAMG,OAAOC,SAb1C,EAAKC,MAAQ,CACXxB,OAAQ,GACRqB,YAAa,IAJH,E,gEAQO,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAAEpB,OAAQ6B,S,+BAOjC,IAAD,EACoBC,KAAKN,MAA5BxB,EADG,EACHA,OAAQqB,EADL,EACKA,YACNU,EAAiB/B,EAAOgC,QAAO,SAAAC,GACnC,OAAOA,EAAMvC,KACVwC,cACAC,SAASd,EAAYa,kBAE1B,OAAQlC,EAAOoC,OAGX,kBAAC,WAAD,KACE,yBAAKxC,UAAU,MACb,wBAAIA,UAAU,MAAd,gBACA,kBAAC,EAAD,CAAWS,aAAcyB,KAAKZ,iBAC9B,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAUlB,OAAQ+B,OAP1B,2C,GA3BYM,cCAZC,G,MAAcC,SAASC,eAAe,SAC5CC,IAASC,OAAW,kBAAC,EAAD,MAAUJ,I","file":"static/js/main.5d71ad52.chunk.js","sourcesContent":["import React, {Fragment} from 'react';\r\n\r\n// const Card = ({id, email, name, username}) => {\r\n  const Card = ({data}) => {\r\n  const  {id, email, name, username} = data\r\n  return (\r\n  <Fragment>\r\n    <div className='bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n      <img alt='robots' src={`https://robohash.org/${id}?200x200`} />\r\n      <div>\r\n        <h2>{name}</h2>\r\n        <h2>A.K.A {username}</h2>\r\n        <p>{email}</p>\r\n      </div>\r\n    </div>\r\n  </Fragment>\r\n  )\r\n}\r\nexport default Card","import React ,{Fragment} from 'react'\r\nimport Card from \"./Card\";\r\n\r\nconst Cardlist = ({robots}) => {\r\n  return (\r\n      <Fragment>\r\n        {\r\n          robots.map(user => {\r\n            return <Card \r\n            key={user.id} \r\n            data={user} />\r\n            //return <Card id={user.id} name={user.name} email={user.email} username={user.username}/>\r\n          })\r\n        }\r\n      </Fragment>\r\n  )\r\n}\r\nexport default Cardlist;","import React from 'react';\r\n const SearchBox = ( {searchChange} )=>{\r\n  return(\r\n    <div className='pa2 searchBar'>\r\n      <input \r\n        className = 'pa3 ba b--green bg-lightest-blue'\r\n        id='searchbox'\r\n        type='search' \r\n        placeholder='Search robots'\r\n        onChange={searchChange}\r\n      />\r\n    </div>\r\n  )\r\n }\r\n\r\nexport default SearchBox","import React from \"react\";\r\n\r\nconst Scroll = props => {\r\n  console.log(props);\r\n  return (\r\n    <div style={{\r\n        overflowY: 'scroll',\r\n        height : '500px'\r\n    }}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Scroll;\r\n","import React, { Fragment, Component } from \"react\";\r\nimport Cardlist from \"../components/Cardlist\";\r\nimport SearchBox from \"../components/SearchBox\";\r\nimport Scroll from \"../components/Scroll\";\r\n\r\nimport \"./App.css\";\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      robots: [],\r\n      searchfield: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n      .then(response => response.json())\r\n      .then(users => this.setState({ robots: users }));\r\n  }\r\n\r\n  onSearchChange = event => {\r\n    this.setState({ searchfield: event.target.value });\r\n  };\r\n\r\n  render() {\r\nconst { robots, searchfield} = this.state;\r\n    const filteredRobots = robots.filter(robot => {\r\n      return robot.name\r\n        .toLowerCase()\r\n        .includes(searchfield.toLowerCase());\r\n    });\r\n    return !robots.length ?\r\n      <h2>Loading</h2> :\r\n      (\r\n        <Fragment>\r\n          <div className=\"tc\">\r\n            <h1 className=\"f2\">ROBOT_FRIEND</h1>\r\n            <SearchBox searchChange={this.onSearchChange} />\r\n            <Scroll>\r\n              <Cardlist robots={filteredRobots} />\r\n            </Scroll>\r\n          </div>\r\n        </Fragment>\r\n      );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport tachyons from \"tachyons\";\r\nimport App from './containers/App'\r\n\r\nimport \"./index.css\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(    <App />,  rootElement );\r\n"],"sourceRoot":""}